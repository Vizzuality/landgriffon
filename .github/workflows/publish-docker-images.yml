name: Publish Docker images

on:
  push:
#    branches:
#      - 'main'
#      - 'staging'
#      - 'test'
#      - 'vcf'
#      - 'tetrapack'
#      - 'diageo'
#    paths:
#      - 'api/**'
#      - 'client/**'
#      - 'data/**'
#      - '.github/**'
  workflow_dispatch:

jobs:
  push_api_to_registry:
    name: Push API Docker image to Docker Hub
    runs-on: ubuntu-20.04
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Log in to Docker Hub
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Get ECR Registry
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Extract branch name
        shell: bash
        run: |
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          echo "##[set-output name=branch-upper;]$(echo ${GITHUB_REF#refs/heads/} | tr a-z A-Z )"
        id: extract_branch

#      - name: Build API Docker image
#        uses: docker/build-push-action@v2
#        with:
#          context: "{{defaultContext}}:api"
#          load: true
#          tags: vizzuality/landgriffon-api:${{ steps.extract_branch.outputs.branch }}

      - name: Build API Docker image
        env:
          ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          ECR_REPOSITORY: api
          IMAGE_TAG: ${{ steps.extract_branch.outputs.branch }}
        run: |
          docker build -t $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG .

#      - name: Wait for API E2E tests to run
#        uses: fountainhead/action-wait-for-check@v1.0.0
#        with:
#          token: ${{ secrets.REPO_ACCESS_TOKEN }}
#          checkName: E2E Tests
#          ref: ${{ github.event.pull_request.head.sha || github.sha }}
#
#      - name: Wait for API Integration tests to run
#        uses: fountainhead/action-wait-for-check@v1.0.0
#        with:
#          token: ${{ secrets.REPO_ACCESS_TOKEN }}
#          checkName: Integration Tests
#          ref: ${{ github.event.pull_request.head.sha || github.sha }}
#
#      - name: Wait for Client tests to run
#        uses: fountainhead/action-wait-for-check@v1.0.0
#        with:
#          token: ${{ secrets.REPO_ACCESS_TOKEN }}
#          checkName: Client Tests
#          ref: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Push API Docker image to AWS ECR
        env:
          ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          ECR_REPOSITORY: api
          IMAGE_TAG: ${{ steps.extract_branch.outputs.branch }}
        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

#      - name: Push to AWS ECR
#        uses: docker/build-push-action@v2
#        with:
#          context: "{{defaultContext}}:api"
#          push: true
#          tags: vizzuality/landgriffon-api:${{ steps.extract_branch.outputs.branch }}

#  push_client_to_registry:
#    name: Push Client Docker image to Docker Hub
#    runs-on: ubuntu-20.04
#    steps:
#      - name: Check out the repo
#        uses: actions/checkout@v2
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
##      - name: Log in to Docker Hub
##        uses: docker/login-action@v1
##        with:
##          username: ${{ secrets.DOCKER_USERNAME }}
##          password: ${{ secrets.DOCKER_PASSWORD }}
#
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: ${{ secrets.AWS_REGION }}
#
#      - name: Get ECR Registry
#        id: ecr-login
#        uses: aws-actions/amazon-ecr-login@v1
#
#      - name: Extract branch name
#        shell: bash
#        run: |
#          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
#          echo "##[set-output name=branch-upper;]$(echo ${GITHUB_REF#refs/heads/} | tr a-z A-Z )"
#        id: extract_branch
#
#      - name: Build Client Docker image
#        uses: docker/build-push-action@v2
#        with:
#          context: "{{defaultContext}}:client"
#          load: true
#          tags: vizzuality/landgriffon-client:${{ steps.extract_branch.outputs.branch }}
#          build-args: |
#            "NEXTAUTH_URL=${{ secrets[format('NEXTAUTH_URL_{0}', steps.extract_branch.outputs.branch-upper )] }}"
#            "NEXTAUTH_SECRET=${{ secrets[format('NEXTAUTH_SECRET_{0}', steps.extract_branch.outputs.branch-upper )] }}"
#            "NEXT_PUBLIC_MAPBOX_API_TOKEN=${{ secrets.NEXT_PUBLIC_MAPBOX_API_TOKEN }}"
#            "NEXT_PUBLIC_API_URL=${{ secrets[format('NEXT_PUBLIC_API_URL_{0}', steps.extract_branch.outputs.branch-upper )] }}"
#
#      - name: Wait for API E2E tests to run
#        uses: fountainhead/action-wait-for-check@v1.0.0
#        with:
#          token: ${{ secrets.REPO_ACCESS_TOKEN }}
#          checkName: E2E Tests
#          ref: ${{ github.event.pull_request.head.sha || github.sha }}
#
#      - name: Wait for API Integration tests to run
#        uses: fountainhead/action-wait-for-check@v1.0.0
#        with:
#          token: ${{ secrets.REPO_ACCESS_TOKEN }}
#          checkName: Integration Tests
#          ref: ${{ github.event.pull_request.head.sha || github.sha }}
#
#      - name: Wait for Client tests to run
#        uses: fountainhead/action-wait-for-check@v1.0.0
#        with:
#          token: ${{ secrets.REPO_ACCESS_TOKEN }}
#          checkName: Client Tests
#          ref: ${{ github.event.pull_request.head.sha || github.sha }}
#
#      - name: Push to Docker Hub
#        uses: docker/build-push-action@v2
#        with:
#          context: "{{defaultContext}}:client"
#          push: true
#          tags: vizzuality/landgriffon-client:${{ steps.extract_branch.outputs.branch }}
#          build-args: |
#            "NEXTAUTH_URL=${{ secrets[format('NEXTAUTH_URL_{0}', steps.extract_branch.outputs.branch-upper )] }}"
#            "NEXTAUTH_SECRET=${{ secrets[format('NEXTAUTH_SECRET_{0}', steps.extract_branch.outputs.branch-upper )] }}"
#            "NEXT_PUBLIC_MAPBOX_API_TOKEN=${{ secrets.NEXT_PUBLIC_MAPBOX_API_TOKEN }}"
#            "NEXT_PUBLIC_API_URL=${{ secrets[format('NEXT_PUBLIC_API_URL_{0}', steps.extract_branch.outputs.branch-upper )] }}"
#
#
#  push_data_import_to_registry:
#    name: Push Data Import Docker image to Docker Hub
#    runs-on: ubuntu-20.04
#    steps:
#      - name: Check out the repo
#        uses: actions/checkout@v2
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
##      - name: Log in to Docker Hub
##        uses: docker/login-action@v1
##        with:
##          username: ${{ secrets.DOCKER_USERNAME }}
##          password: ${{ secrets.DOCKER_PASSWORD }}
#
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: ${{ secrets.AWS_REGION }}
#
#      - name: Get ECR Registry
#        id: ecr-login
#        uses: aws-actions/amazon-ecr-login@v1
#
#      - name: Extract branch name
#        shell: bash
#        run: |
#          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
#          echo "##[set-output name=branch-upper;]$(echo ${GITHUB_REF#refs/heads/} | tr a-z A-Z )"
#        id: extract_branch
#
#      - name: Build Data Import Docker image
#        uses: docker/build-push-action@v3
#        with:
#          context: "{{defaultContext}}:data"
#          load: true
#          tags: vizzuality/landgriffon-data-import:${{ steps.extract_branch.outputs.branch }}
#
#      - name: Wait for API E2E tests to run
#        uses: fountainhead/action-wait-for-check@v1.0.0
#        with:
#          token: ${{ secrets.REPO_ACCESS_TOKEN }}
#          checkName: E2E Tests
#          ref: ${{ github.event.pull_request.head.sha || github.sha }}
#
#      - name: Wait for API Integration tests to run
#        uses: fountainhead/action-wait-for-check@v1.0.0
#        with:
#          token: ${{ secrets.REPO_ACCESS_TOKEN }}
#          checkName: Integration Tests
#          ref: ${{ github.event.pull_request.head.sha || github.sha }}
#
#      - name: Wait for Client tests to run
#        uses: fountainhead/action-wait-for-check@v1.0.0
#        with:
#          token: ${{ secrets.REPO_ACCESS_TOKEN }}
#          checkName: Client Tests
#          ref: ${{ github.event.pull_request.head.sha || github.sha }}
#
#      - name: Push to Docker Hub
#        uses: docker/build-push-action@v3
#        with:
#          context: "{{defaultContext}}:data"
#          push: true
#          tags: vizzuality/landgriffon-data-import:${{ steps.extract_branch.outputs.branch }}
